name: Deploy to Azure

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environrment"
        required: true
        type: environment

permissions:
   id-token: write
   contents: read

jobs:

  deploy-infrastructure:

    name: "Install Terraform and Azure ClI and Authenticate to Azure"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: "Checkout GitHub Repo"
        uses: actions/checkout@v4

      - name: set environement variable
        run: echo "TF_ENV=${{ inputs.environment }}"

      - name: "Login to Azure"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: "Install terraform on runner"
        uses: hashicorp/setup-terraform@v3
    
      - name: List Environment Files
        run: ls -R Environments/${{ inputs.environment }}

      - name: "Run Terraform init"
        run: terraform -chdir=Environments/${{ inputs.environment }} init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Run Terraform plan"
        run: terraform -chdir=Environments/${{ inputs.environment }} plan -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: "Run Terraform Format"
        run: terraform -chdir=Environments/${{ inputs.environment }} fmt
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=Environments/${{ inputs.environment }} apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_sql_admin_login: ${{ secrets.ADMIN_LOGIN }}
          TF_VAR_sql_admin_login_password: ${{ secrets.ADMIN_LOGIN_PASSWORD }}
       
        

      
      



     

      
        
        
        



  

   